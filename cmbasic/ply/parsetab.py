
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION BEGIN BOOLOP COLOR ELSE END GEMS GOTO IF INDENT LOOP THEN TROLL WHOLENUMBERprog : BEGIN instructions ENDprog : BEGIN ENDinstructions : instructions instructioninstructions : instructioninstruction : WHOLENUMBER statementstatement : ACTIONstatement : IF cond THEN ACTIONstatement : IF cond THEN ACTION ELSE ACTIONstatement : IF cond THEN GOTO WHOLENUMBERstatement : IF cond THEN LOOP actionlistactionlist : actionlist indentedactionactionlist : indentedactionindentedaction : INDENT ACTION\n    cond : GEMS BOOLOP WHOLENUMBER\n         | TROLL BOOLOP COLOR\n    '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,4,7,],[0,-2,-1,]),'END':([2,3,5,8,9,10,18,24,25,26,28,29,30,],[4,7,-4,-3,-5,-6,-7,-9,-10,-12,-8,-11,-13,]),'WHOLENUMBER':([2,3,5,8,9,10,16,18,19,24,25,26,28,29,30,],[6,6,-4,-3,-5,-6,21,-7,24,-9,-10,-12,-8,-11,-13,]),'ACTION':([6,15,23,27,],[10,18,28,30,]),'IF':([6,],[11,]),'GEMS':([11,],[13,]),'TROLL':([11,],[14,]),'THEN':([12,21,22,],[15,-14,-15,]),'BOOLOP':([13,14,],[16,17,]),'GOTO':([15,],[19,]),'LOOP':([15,],[20,]),'COLOR':([17,],[22,]),'ELSE':([18,],[23,]),'INDENT':([20,25,26,29,30,],[27,27,-12,-11,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'instructions':([2,],[3,]),'instruction':([2,3,],[5,8,]),'statement':([6,],[9,]),'cond':([11,],[12,]),'actionlist':([20,],[25,]),'indentedaction':([20,25,],[26,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> BEGIN instructions END','prog',3,'p_prog','ai1.py',255),
  ('prog -> BEGIN END','prog',2,'p_prog_empty','ai1.py',260),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_multiple','ai1.py',265),
  ('instructions -> instruction','instructions',1,'p_instructions_single','ai1.py',270),
  ('instruction -> WHOLENUMBER statement','instruction',2,'p_instruction','ai1.py',275),
  ('statement -> ACTION','statement',1,'p_action_statement','ai1.py',280),
  ('statement -> IF cond THEN ACTION','statement',4,'p_if_then_action_statement','ai1.py',285),
  ('statement -> IF cond THEN ACTION ELSE ACTION','statement',6,'p_if_then_else_action_statement','ai1.py',290),
  ('statement -> IF cond THEN GOTO WHOLENUMBER','statement',5,'p_if_then_goto_statement','ai1.py',295),
  ('statement -> IF cond THEN LOOP actionlist','statement',5,'p_if_then_loop_statement','ai1.py',300),
  ('actionlist -> actionlist indentedaction','actionlist',2,'p_actionlist_multiple','ai1.py',305),
  ('actionlist -> indentedaction','actionlist',1,'p_actionlist_single','ai1.py',310),
  ('indentedaction -> INDENT ACTION','indentedaction',2,'p_indented_action','ai1.py',315),
  ('cond -> GEMS BOOLOP WHOLENUMBER','cond',3,'p_gem_cond','ai1.py',321),
  ('cond -> TROLL BOOLOP COLOR','cond',3,'p_gem_cond','ai1.py',322),
]
